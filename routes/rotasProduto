// Importe as dependências necessárias
const express = require("express");
const router = express.Router();
const sqlite3 = require("sqlite3").verbose();


// Crie uma instância do banco de dados
const db = new sqlite3.Database("database.db");

// Rota para cadastrar um produto
router.post("/", (req, res) => {
    const { status, descricao, estoque_minimo, estoque_maximo } = req.body;
    //criar a tabela produto, caso ela ainda nao exista
                db.run("CREATE TABLE IF NOT EXISTS produto (id INTEGER PRIMARY KEY AUTOINCREMENT, status TEXT, descricao TEXT, estoque_minimo REAL, estoque_maximo REAL)", (createTableError) => {
                    console.log(createTableError)
                    if (createTableError) {
                        return res.status(500).send({
                            error: createTableError.message
                        });
                    }


                });

    // Verifica se todos os campos obrigatórios estão presentes
    if (!status || !descricao || !estoque_minimo || !estoque_maximo) {
        return res.status(400).json({ mensagem: "Todos os campos são obrigatórios." });
    }

    // Validação do formato do email (opcional)
    if (!validateEmail(email)) {
        return res.status(400).json({ mensagem: "Formato de email inválido." });
    }

    // Insira os dados do produto no banco de dados
    db.run(
        "INSERT INTO produto (status, descricao, estoque_minimo, estoque_maximo) VALUES (?, ?, ?, ?)",
        [status, descricao, estoque_minimo, estoque_maximo],
        function (error) {
       
            if (error) {
                console.error("Erro ao cadastrar produto:", error.message);
                
                return res.status(500).json({ mensagem: "Erro ao cadastrar produto. "+error.message });
            }
            res.status(201).json({ mensagem: "Produto cadastrado com sucesso!" });
        }
    );
});

// Função para validar o formato de email
function validateEmail(email) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(String(email).toLowerCase());
}

module.exports = router;
